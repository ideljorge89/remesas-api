# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: es
  excel_remove: true
  excel_sub_path: '/../var/excel-docs/'
  files_path: '%kernel.project_dir%/%web_dir%/uploads/files'
  evidencia_transferencia_path: '%kernel.project_dir%/%web_dir%/uploads/evidencias'
  web_dir: 'public'
  global_params:
    data: 'var'
    locales:
        es:
            locale: es
            flag: Spain.png
        en:
            locale: en
            flag: United-Kingdom.png
  google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{Controller,Form,Twig,DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\Backend\:
    resource: '../src/Controller/Backend/'
    tags: ['controller.service_arguments']

  App\Controller\:
    resource: '../src/Controller/'
    tags: ['controller.service_arguments']

  App\Form\Auto\:
    resource: '../src/Form/Auto'
    tags: ['controller.service_arguments']

  App\Swagger\SwaggerDecorator:
    decorates: 'api_platform.swagger.normalizer.documentation'
    arguments: ['@App\Swagger\SwaggerDecorator.inner']
    autoconfigure: false

  App\Serializer\CustomApiNormalizer:
    arguments:
      - '@api_platform.serializer.normalizer.item'
    tags: [ 'serializer.normalizer' ]

  App\Session\Security\CaptchaFormAuthenticationListener:
    decorates: security.authentication.listener.form.main
    arguments: ["@ewz_recaptcha.form.type","@App\\Session\\Security\\CaptchaFormAuthenticationListener.inner","@service_container",'%ewz_recaptcha.enabled%']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
  gedmo.listener.sluggable:
    class: Gedmo\Sluggable\SluggableListener
    tags:
      - { name: doctrine.event_subscriber, connection: default, priority: 1 }
    calls:
      - [ setAnnotationReader, [ '@annotation_reader' ] ]

  configuration:
    class: App\Manager\ConfigurationManager
    public: true
    arguments: ["@service_container"]

  tcpdf_manager:
    class: App\Manager\TcPdfManager
    public: true
    arguments: ["@service_container"]

  factura_manager:
    class: App\Manager\FacturaManager
    public: true
    arguments: ["@service_container"]

  app.twig.app_extension:
    class: App\Twig\AppExtension
    public: true
    arguments: ['@service_container', "@doctrine.orm.default_entity_manager",'@twig.extension.assets']
    tags:
      - { name: twig.extension }

  app.photo.crop:
    class: App\Manager\CropAvatar
    public: true
    arguments: ["@service_container"]

  app.flash_message.listener:
    class: App\EventListener\FlashListener
    arguments: ["@session", "@translator"]
    tags:
      - { name: kernel.event_subscriber }

  app.twig.extension.base_64:
    class: App\Twig\Extension\ToBase64Extension
    public: true
    tags:
      - { name: twig.extension }

  app.twig.extension.instance_of:
    class: App\Twig\Extension\InstanceOfExtension
    public: true
    tags:
      - { name: twig.extension }

  app.form_extention.icon:
    class: App\Form\Extension\ButtonTypeIconExtension
    public: true
    tags:
      - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\ButtonType }


  twig.extension.Radley.truncatehtml:
    class: App\Twig\Extension\Radley\TruncateHtmlExtension
    public: true
    tags:
      - { name: twig.extension }

  twig.extension.text:
    class: Twig_Extensions_Extension_Text
    tags:
      - { name: twig.extension }

  twig.extension.array:
    class: Twig_Extensions_Extension_Array
    tags:
      - { name: twig.extension }

  twig.extension.date:
    class: Twig_Extensions_Extension_Date
    arguments: ['@translator']
    tags:
      - { name: twig.extension }

  twig.extension.intl:
    class: Twig_Extensions_Extension_Intl
    arguments: ['@translator']
    tags:
      - { name: twig.extension }

  app.form_data_transformer.datascope_to_number:
    class: App\Form\Transformer\DatascopeToNumberTransformer
    arguments: ['@doctrine.orm.default_entity_manager']

  app.form_extention.datascope_selector_type:
    class: App\Form\Extension\DatascopeSelectorType
    arguments: ["@app.form_data_transformer.datascope_to_number"]
    tags:
      - { name: form.type }

  infinite_form.polycollection_type:
    class: App\Form\Type\PolyCollection\PolyCollectionType
    tags:
      form_type:
        name: form.type
        alias: polycollection

  login_listener:
    class: App\EventListener\LoginListener
    arguments: ['@doctrine.orm.entity_manager', '@session', '@service_container']
    tags:
      - { name: kernel.event_subscriber }

  app.registration.form.type:
    class: App\Form\Registration\RegistrationFormType
    arguments: ['%fos_user.model.user.class%', '@service_container']
    tags:
      - { name: form.type, alias: user_registration }

  app.profile.form.type:
    class: App\Form\Profile\ProfileFormType
    arguments: ['%fos_user.model.user.class%', '@service_container',"%kernel.root_dir%/../%web_dir%"]
    public: true
    tags:
      - { name: form.type, alias: user_edit }

#  app.change_password.form.type:
#    class: App\Form\ChangePassword\ChangePasswordFormType
#    arguments: ['%fos_user.model.user.class%', '@service_container']
#    tags:
#      - { name: form.type, alias: user_change_password }

  app.reset_password.form.type:
    class: App\Form\ChangePassword\ResettingFormType
    arguments: ['%fos_user.model.user.class%', '@service_container']
    tags:
      - { name: form.type, alias: user_resetting }

  app.factura.form.type:
    class: App\Form\TnFacturaType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: factura_type }

  app.transferencia.form.type:
    class: App\Form\TnTransferenciaType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: transferencia_type }

  app.fichero.form.type:
    class: App\Form\TnDocumentoType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: fichero_type }

  app.agente.form.type:
    class: App\Form\TnAgenteType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: agente_type }

  app.destinatario.form.type:
    class: App\Form\TnDestinatarioType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: destinatario_type }

  app.distribuir.form.type:
    class: App\Form\Type\FacturaDistribuirType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: factura_distribuir_type }

  app.aprobar.form.type:
    class: App\Form\Type\FacturaAprobarType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: factura_aprobar_type }

  app.asigar.form.type:
    class: App\Form\Type\PendientesAsignarType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: pendientes_asingar_type }

  app.emisor.form.type:
    class: App\Form\TnEmisorType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: emisor_type }

  app.reporte_distribuidor.form.type:
    class: App\Form\Type\ReporteDistribuidorRemesasType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: reporte_distribuidor_type }

  app.reporte_agente.form.type:
    class: App\Form\Type\ReporteAgentesRemesasType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: reporte_agente_type }

  app.transf_reporte_agente.form.type:
    class: App\Form\Type\ReporteAgentesTransfType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: transf_reporte_agente_type }

  app.transf_reporte_agt.form.type:
    class: App\Form\Type\ReporteAgtTransfType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: transf_reporte_ag_type }

  app.grupo_pago_agente.form.type:
    class: App\Form\NmGrupoPagoAgenteType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: grupo_pago_agente_type }

  app.remesa.form.type:
    class: App\Form\Type\TnRemesaType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: tn_factura_remesa }

  app.advanced_search.form.type:
    class: App\Form\Type\AdvancedSerachType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: advanced_search_type }

  app.advanced_transf_search.form.type:
    class: App\Form\Type\AdvancedSerachTransfType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: advanced_search_transf_type }

  app.advanced_transf_asignar_search.form.type:
    class: App\Form\Type\AdvancedSerachAsignarType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: advanced_search_transf_asginar_type }

  app.destinatario_search.form.type:
    class: App\Form\Type\DestinatarioSerachType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: destinatario_search_type }

  app.remesas_search.form.type:
    class: App\Form\Type\RemesasSerachType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: remesas_search_type }

  app.nm_moneda.form.type:
    class: App\Form\NmMonedaType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: nm_moneda_type }

  app.tn_agencia.form.type:
    class: App\Form\TnAgenciaType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: tn_agencia_type }

  app.tn_apoderado.form.type:
    class: App\Form\TnApoderadoType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: tn_apoderado_type }

  app.report_agencia_apoderado.form.type:
    class: App\Form\Type\ReporteAgenciaApoderadosType
    arguments: ['@service_container']
    tags:
      - { name: form.type, alias: report_agencia_apoderado_type }

  monolog.processor.web:
    class: Symfony\Bridge\Monolog\Processor\WebProcessor
    tags: [monolog.processor]

  monolog.processor.token:
    class: Symfony\Bridge\Monolog\Processor\TokenProcessor
    tags: [monolog.processor]
