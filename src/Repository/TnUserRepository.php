<?php

namespace App\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TnUserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TnUserRepository extends EntityRepository
{
    public function findSelections($data)
    {
        $query = $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.id = -1')
            ->setMaxResults(50);

        if (in_array('type', $data['options'])) {
            $rol = '';
            $query->orWhere('u.roles LIKE :roles')
                ->setParameter('roles', '%' . $rol . '%');
        }

        if (in_array('email', $data['options'])) {
            $query->orWhere('u.email = :email')
                ->setParameter('email', $data['search']);
        }

        if (in_array('username', $data['options'])) {
            $query->orWhere('u.username LIKE :username')
                ->setParameter('username', "%" . $data['search'] . "%");
        }

        return $query->getQuery()->getResult();
    }

    public function findSelectionsUsers($data)
    {
        $query = $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.id = -1')
            ->setMaxResults(50);

        if (in_array('type', $data['options'])) {
            $rol = '';
            $query->orWhere('u.roles LIKE :roles')
                ->setParameter('roles', '%' . $rol . '%');
        }

        if (in_array('email', $data['options'])) {
            $query->orWhere('u.email = :email')
                ->setParameter('email', $data['search']);
        }

        if (in_array('username', $data['options'])) {
            $query->orWhere('u.username LIKE :username')
                ->setParameter('username', "%" . $data['search'] . "%");
        }

        return $query->andWhere('u.enabled = true')->getQuery()->getResult();
    }


    public function findUsersNoConfirmation()
    {
        $query = $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.confirmationToken is not null');

        return $query->getQuery()->getResult();
    }

    public function findUsuariosAgentesAgenciaIds($agencia)
    {
        $dql = "SELECT u.id FROM App:TnUser u JOIN u.agente ag WHERE ag.agencia = :agn";
        $arrayId = $this->getEntityManager()->createQuery($dql)->setParameter('agn', $agencia)->getResult();
        return $arrayId;
    }
}
